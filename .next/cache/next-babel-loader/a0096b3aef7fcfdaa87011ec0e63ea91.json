{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/andrewhummel/git-projects/nextjs-app/pages/index.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query {\\n      jobs {\\n        id\\n        title\\n        applyUrl\\n        company {\\n          name\\n        }\\n      }\\n    }\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport JobList from \"../components/JobList\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\n\nvar Index = function Index() {\n  _s();\n\n  var _jobs$data;\n\n  // our query that defines the attributes we want to get.\n  var JOBS_QUERY = gql(_templateObject()); // the hook that calls the query.\n\n  var jobs = useQuery(JOBS_QUERY);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"GraphQL Job Board\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"A list of open GraphQL jobs.\"), __jsx(JobList, {\n    jobs: (jobs === null || jobs === void 0 ? void 0 : (_jobs$data = jobs.data) === null || _jobs$data === void 0 ? void 0 : _jobs$data.jobs) || [],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(Index, \"1NYW5NJlIbkdC/OKgQvs4eX1opA=\", false, function () {\n  return [useQuery];\n});\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/andrewhummel/git-projects/nextjs-app/pages/index.tsx"],"names":["React","JobList","useQuery","gql","Index","JOBS_QUERY","jobs","data"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA;;AAAA;;AAClB;AACA,MAAMC,UAAU,GAAGF,GAAH,mBAAhB,CAFkB,CAelB;;AACA,MAAMG,IAAI,GAAGJ,QAAQ,CAACG,UAAD,CAArB;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAFF,EAGE,MAAC,OAAD;AAAS,IAAA,IAAI,EAAE,CAAAC,IAAI,SAAJ,IAAAA,IAAI,WAAJ,0BAAAA,IAAI,CAAEC,IAAN,0DAAYD,IAAZ,KAAoB,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD,CAzBD;;GAAMF,K;UAgBSF,Q;;;KAhBTE,K;AA2BN,eAAeA,KAAf","sourcesContent":["import React from \"react\"\nimport JobList from \"../components/JobList\"\nimport { useQuery } from \"@apollo/react-hooks\"\nimport { gql } from \"apollo-boost\"\n\nconst Index = () => {\n  // our query that defines the attributes we want to get.\n  const JOBS_QUERY = gql`\n    query {\n      jobs {\n        id\n        title\n        applyUrl\n        company {\n          name\n        }\n      }\n    }\n  `\n\n  // the hook that calls the query.\n  const jobs = useQuery(JOBS_QUERY)\n\n  return (\n    <div>\n      <h1>GraphQL Job Board</h1>\n      <p>A list of open GraphQL jobs.</p>\n      <JobList jobs={jobs?.data?.jobs || []} />\n    </div>\n  )\n}\n\nexport default Index"]},"metadata":{},"sourceType":"module"}