{"ast":null,"code":"var _jsxFileName = \"/Users/andrewhummel/git-projects/nextjs-app/pages/_app.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\nimport App from \"next/app\";\nimport { CacheProvider } from '@emotion/core';\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport withApollo from \"../hooks/withApollo\";\n// Use only { cache } from 'emotion'. Don't use { css }.\nimport { cache } from 'emotion';\nimport { globalStyles } from '../shared/styles'; // since \"apollo\" isn't a native Next.js prop we have to declare it's type.\n\nclass NextJsApp extends App {\n  render() {\n    const {\n      Component,\n      pageProps,\n      apollo\n    } = this.props;\n    return __jsx(ApolloProvider, {\n      client: apollo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 4\n      }\n    }, __jsx(CacheProvider, {\n      value: cache,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, globalStyles, __jsx(Component, _extends({}, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}\n\nexport default withApollo(NextJsApp);","map":{"version":3,"sources":["/Users/andrewhummel/git-projects/nextjs-app/pages/_app.tsx"],"names":["React","App","CacheProvider","ApolloProvider","withApollo","cache","globalStyles","NextJsApp","render","Component","pageProps","apollo","props"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,SAASC,aAAT,QAA8B,eAA9B;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AAGA;AACA,SAASC,KAAT,QAAsB,SAAtB;AAEA,SAASC,YAAT,QAA6B,kBAA7B,C,CAEA;;AAKA,MAAMC,SAAN,SAAwBN,GAAxB,CAAoC;AAClCO,EAAAA,MAAM,GAAG;AACV,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA,SAAb;AAAwBC,MAAAA;AAAxB,QAAmC,KAAKC,KAA9C;AAEG,WACD,MAAC,cAAD;AAAgB,MAAA,MAAM,EAAED,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,MAAC,aAAD;AAAe,MAAA,KAAK,EAAEN,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,YADH,EAEE,MAAC,SAAD,eAAeI,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFF,CADL,CADC;AAQD;;AAZiC;;AAepC,eAAeN,UAAU,CAACG,SAAD,CAAzB","sourcesContent":["import React from \"react\"\nimport App from \"next/app\"\nimport { CacheProvider } from '@emotion/core'\nimport { ApolloProvider } from \"@apollo/react-hooks\"\nimport withApollo from \"../hooks/withApollo\"\nimport { ApolloClient, NormalizedCacheObject } from \"apollo-boost\"\n\n// Use only { cache } from 'emotion'. Don't use { css }.\nimport { cache } from 'emotion'\n\nimport { globalStyles } from '../shared/styles'\n\n// since \"apollo\" isn't a native Next.js prop we have to declare it's type.\ninterface IProps {\n\tapollo: ApolloClient<NormalizedCacheObject>;\n  }\n\nclass NextJsApp extends App<IProps> {\n  render() {\n\tconst { Component, pageProps, apollo } = this.props\n\t\n    return (\n\t  <ApolloProvider client={apollo}>\n        <CacheProvider value={cache}>\n          {globalStyles}\n          <Component {...pageProps} />\n        </CacheProvider>\n\t  </ApolloProvider>\n    )\n  }\n}\n\nexport default withApollo(NextJsApp)"]},"metadata":{},"sourceType":"module"}