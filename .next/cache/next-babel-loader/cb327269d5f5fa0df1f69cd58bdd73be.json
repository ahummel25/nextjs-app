{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/andrewhummel/git-projects/nextjs-app/pages/_app.tsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport App from \"next/app\";\nimport { CacheProvider } from '@emotion/core';\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport withApollo from \"../hooks/withApollo\";\n// Use only { cache } from 'emotion'. Don't use { css }.\nimport { cache } from 'emotion';\nimport { globalStyles } from '../shared/styles'; // since \"apollo\" isn't a native Next.js prop we have to declare it's type.\n\nvar NextJsApp = /*#__PURE__*/function (_App) {\n  _inherits(NextJsApp, _App);\n\n  var _super = _createSuper(NextJsApp);\n\n  function NextJsApp() {\n    _classCallCheck(this, NextJsApp);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(NextJsApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps,\n          apollo = _this$props.apollo;\n      return __jsx(ApolloProvider, {\n        client: apollo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 4\n        }\n      }, __jsx(CacheProvider, {\n        value: cache,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }\n      }, globalStyles, __jsx(Component, _extends({}, pageProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }\n      }))));\n    }\n  }]);\n\n  return NextJsApp;\n}(App);\n\nexport default _c = withApollo(NextJsApp);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/andrewhummel/git-projects/nextjs-app/pages/_app.tsx"],"names":["React","App","CacheProvider","ApolloProvider","withApollo","cache","globalStyles","NextJsApp","props","Component","pageProps","apollo"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,SAASC,aAAT,QAA8B,eAA9B;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AAGA;AACA,SAASC,KAAT,QAAsB,SAAtB;AAEA,SAASC,YAAT,QAA6B,kBAA7B,C,CAEA;;IAKMC,S;;;;;;;;;;;;;6BACK;AAAA,wBAC+B,KAAKC,KADpC;AAAA,UACFC,SADE,eACFA,SADE;AAAA,UACSC,SADT,eACSA,SADT;AAAA,UACoBC,MADpB,eACoBA,MADpB;AAGP,aACD,MAAC,cAAD;AAAgB,QAAA,MAAM,EAAEA,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,MAAC,aAAD;AAAe,QAAA,KAAK,EAAEN,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGC,YADH,EAEE,MAAC,SAAD,eAAeI,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,CADL,CADC;AAQD;;;;EAZqBT,G;;AAexB,oBAAeG,UAAU,CAACG,SAAD,CAAzB","sourcesContent":["import React from \"react\"\nimport App from \"next/app\"\nimport { CacheProvider } from '@emotion/core'\nimport { ApolloProvider } from \"@apollo/react-hooks\"\nimport withApollo from \"../hooks/withApollo\"\nimport { ApolloClient, NormalizedCacheObject } from \"apollo-boost\"\n\n// Use only { cache } from 'emotion'. Don't use { css }.\nimport { cache } from 'emotion'\n\nimport { globalStyles } from '../shared/styles'\n\n// since \"apollo\" isn't a native Next.js prop we have to declare it's type.\ninterface IProps {\n\tapollo: ApolloClient<NormalizedCacheObject>;\n  }\n\nclass NextJsApp extends App<IProps> {\n  render() {\n\tconst { Component, pageProps, apollo } = this.props\n\t\n    return (\n\t  <ApolloProvider client={apollo}>\n        <CacheProvider value={cache}>\n          {globalStyles}\n          <Component {...pageProps} />\n        </CacheProvider>\n\t  </ApolloProvider>\n    )\n  }\n}\n\nexport default withApollo(NextJsApp)"]},"metadata":{},"sourceType":"module"}